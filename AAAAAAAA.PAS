{ программа бай Ден По (2:5066/68.19) писано в апреле 1999-го }
{ программа доказывает, что и на пасе можно писать программы. }
{ в программе не используются:                                }
{  1. модуль graph ;) и соответственно BGI                    }
{  2. "хитрые" TPU'шки                                        }
{  3. asm - вставки                                           }
{  4. внешние процедуры                                       }

uses dos,crt;
type
   ppicture = ^tpicture;
   tpicture = Array[0 ..199,0..319]of byte;

{images}
const dps: array[0..32,0..7]of byte={den pos sign}
(($00,$3F,$FF,$1F,$03,$FF,$00,$00),($07,$FF,$9F,$FF,$CF,$FF,$FF,$F0),
 ($1F,$FE,$0F,$FF,$FF,$F7,$FF,$F8),($3F,$E1,$F7,$FF,$FF,$E0,$00,$7C),
 ($3F,$DF,$37,$FF,$FF,$EF,$FF,$3E),($3F,$B0,$37,$FF,$FF,$CF,$FF,$9F),
 ($7F,$B0,$37,$FF,$FF,$D8,$01,$DF),($7F,$A0,$37,$FF,$FF,$90,$00,$5F),
 ($7F,$A0,$67,$F0,$70,$10,$70,$4E),($7F,$B0,$63,$E7,$83,$30,$78,$4E),
 ($3F,$D8,$78,$4C,$8F,$A0,$F8,$4E),($3F,$CC,$1F,$90,$D0,$F8,$F0,$5E),
 ($7F,$E4,$01,$E0,$70,$38,$E0,$DF),($7F,$F4,$30,$38,$78,$38,$01,$9F),
 ($7F,$F4,$3C,$38,$78,$38,$07,$9F),($70,$14,$3E,$18,$78,$38,$3F,$C7),
 ($E7,$E4,$3E,$18,$38,$F8,$7E,$73),($EC,$3C,$3F,$F9,$1C,$F8,$F8,$1B),
 ($D8,$00,$07,$F9,$0C,$F8,$F0,$09),($D0,$00,$03,$F9,$80,$78,$E3,$89),
 ($D1,$F0,$03,$99,$C0,$78,$E7,$CD),($D1,$F8,$1F,$81,$E0,$78,$E7,$C5),
 ($91,$FC,$00,$01,$70,$78,$63,$8D),($91,$FC,$00,$01,$1C,$70,$00,$09),
 ($D0,$FC,$00,$01,$0E,$D0,$00,$09),($D8,$78,$03,$E3,$03,$D0,$00,$19),
 ($CE,$01,$83,$FF,$00,$1E,$10,$33),($C3,$C3,$FF,$0E,$30,$03,$FF,$E3),
 ($E0,$7F,$3E,$00,$3E,$01,$F6,$03),($E0,$00,$00,$00,$7F,$C0,$00,$06),
 ($78,$00,$00,$00,$7F,$FC,$00,$1E),($7E,$00,$00,$7C,$FB,$FF,$0F,$FC),
 ($2F,$FF,$FF,$FF,$E0,$E7,$FF,$E0));

      dpo: array[0..115,0..11]of byte={den po}
(($00,$00,$00,$00,$00,$00,$00,$00,$0F,$FF,$00,$00),($00,$00,$00,$00
 ,$00,$00,$00,$00,$1F,$FF,$80,$00),($00,$00,$00,$00,$00,$00,$00,$00
 ,$38,$07,$C0,$00),($00,$00,$00,$00,$00,$00,$00,$00,$70,$00,$E0,$00
 ),($00,$00,$00,$00,$00,$00,$00,$00,$F0,$00,$70,$00),($00,$00,$00,$00
 ,$00,$00,$00,$01,$E0,$60,$38,$00),($00,$00,$00,$00,$00,$00,$00,$01
 ,$C1,$F8,$38,$00),($00,$00,$00,$00,$00,$00,$00,$03,$83,$FC,$38,$00
 ),($00,$00,$00,$00,$00,$00,$00,$07,$07,$FC,$38,$00),($00,$00,$00,$00
 ,$00,$00,$00,$0E,$07,$FC,$38,$00),($00,$00,$00,$00,$00,$00,$00,$1E
 ,$0F,$F8,$38,$00),($00,$00,$00,$00,$00,$00,$00,$3C,$1F,$F0,$70,$00
 ),($00,$00,$00,$00,$00,$00,$00,$78,$3F,$F0,$F0,$00),($00,$00,$00,$00
 ,$00,$00,$00,$70,$7F,$E0,$E0,$00),($00,$00,$00,$00,$00,$00,$00,$E0
 ,$FF,$C1,$C0,$00),($00,$00,$00,$00,$00,$00,$00,$C1,$FF,$C3,$80,$00
 ),($00,$00,$00,$00,$00,$00,$01,$C1,$FF,$87,$80,$00),($00,$00,$00,$00
 ,$00,$00,$03,$83,$FF,$0F,$00,$00),($00,$00,$00,$00,$00,$00,$07,$07
 ,$FE,$1E,$00,$00),($00,$00,$00,$00,$00,$00,$0F,$0F,$FC,$1C,$00,$00
 ),($00,$00,$00,$00,$00,$00,$1E,$1F,$F8,$38,$00,$00),($00,$00,$00,$00
 ,$00,$00,$3C,$3F,$F8,$70,$00,$00),($00,$00,$00,$00,$00,$00,$38,$3F
 ,$F0,$E0,$00,$00),($00,$00,$00,$00,$00,$00,$70,$7F,$E1,$E0,$00,$00
 ),($00,$00,$00,$00,$00,$00,$E0,$FF,$C3,$C0,$00,$00),($00,$00,$00,$00
 ,$00,$01,$E0,$FF,$83,$80,$00,$00),($00,$00,$00,$00,$00,$03,$C1,$FF
 ,$07,$00,$00,$00),($00,$00,$00,$00,$FF,$F7,$83,$FF,$0F,$00,$00,$00
 ),($00,$00,$00,$0F,$FF,$FF,$07,$FE,$0E,$00,$00,$00),($00,$00,$00,$7F
 ,$FF,$FE,$0F,$FC,$1C,$00,$00,$00),($00,$00,$03,$FF,$00,$1C,$1F,$FC
 ,$38,$00,$00,$00),($00,$00,$0F,$F0,$00,$00,$1F,$F8,$70,$00,$00,$00
 ),($00,$00,$7F,$80,$00,$00,$3F,$F0,$F0,$00,$00,$00),($00,$00,$FC,$00
 ,$00,$00,$7F,$E0,$E0,$00,$00,$00),($00,$01,$F0,$00,$FF,$E1,$FF,$C1
 ,$E0,$00,$00,$00),($00,$03,$E0,$0F,$FF,$FD,$FF,$83,$E0,$00,$00,$00
 ),($00,$07,$80,$3F,$FF,$FF,$FF,$83,$F0,$00,$00,$00),($00,$0F,$00,$7F
 ,$FF,$FF,$FF,$07,$FC,$00,$00,$00),($00,$1E,$01,$FF,$FF,$FF,$FE,$0E
 ,$3E,$00,$00,$00),($00,$3C,$07,$FF,$FF,$FF,$FC,$1C,$0F,$80,$00,$00
 ),($00,$78,$0F,$FF,$FF,$FF,$F8,$3C,$07,$E0,$00,$00),($00,$70,$1F,$FF
 ,$FF,$FF,$F0,$38,$03,$F0,$00,$00),($00,$E0,$3F,$FF,$FF,$FF,$E0,$00
 ,$00,$F8,$00,$00),($00,$E0,$7F,$FF,$FF,$FF,$E0,$00,$80,$3E,$00,$00
 ),($01,$C0,$FF,$FF,$FF,$FF,$C0,$01,$E0,$1F,$00,$00),($01,$C0,$FF,$FF
 ,$FF,$FF,$80,$01,$F0,$0F,$80,$00),($01,$C1,$FF,$FF,$FF,$FF,$00,$03
 ,$FC,$07,$80,$00),($03,$81,$FF,$FF,$FF,$FE,$00,$07,$FE,$01,$C0,$00
 ),($03,$81,$FF,$FF,$FF,$FC,$00,$0F,$FF,$00,$E0,$00),($03,$83,$FF,$FF
 ,$FF,$FC,$00,$1F,$FF,$80,$E0,$00),($07,$83,$FF,$FF,$FF,$F8,$00,$3F
 ,$FF,$C0,$78,$00),($07,$03,$FF,$FF,$FF,$F0,$00,$7F,$FF,$E0,$78,$00
 ),($07,$03,$FF,$FF,$FF,$F0,$00,$7F,$FF,$F0,$3C,$00),($07,$03,$FF,$FF
 ,$FF,$E0,$00,$FF,$FF,$F0,$3C,$00),($07,$03,$FF,$FF,$FF,$C0,$00,$FF
 ,$FF,$F8,$1E,$00),($07,$03,$FF,$FF,$FF,$80,$01,$FF,$FF,$FC,$1E,$00
 ),($07,$03,$FF,$FF,$FF,$00,$03,$FF,$FF,$FC,$0F,$00),($03,$83,$FF,$FF
 ,$FE,$00,$07,$FF,$FF,$FE,$0F,$00),($03,$81,$FF,$FF,$FE,$00,$0F,$FF
 ,$FF,$FE,$07,$00),($03,$81,$FF,$FF,$FC,$00,$1F,$FF,$FF,$FE,$07,$00
 ),($03,$81,$FF,$FF,$F8,$00,$1F,$FF,$FF,$FE,$07,$00),($01,$C0,$FF,$FF
 ,$F8,$00,$3F,$FF,$FF,$FE,$07,$00),($01,$C0,$FF,$FF,$F0,$00,$7F,$FF
 ,$FF,$FE,$07,$00),($00,$E0,$7F,$FF,$E0,$00,$FF,$FF,$FF,$FE,$07,$00
 ),($00,$E0,$3F,$FF,$C0,$01,$FF,$FF,$FF,$FE,$0F,$00),($00,$70,$1F,$FF
 ,$80,$03,$FF,$FF,$FF,$FE,$0F,$00),($00,$78,$0F,$FF,$00,$03,$FF,$FF
 ,$FF,$FC,$1E,$00),($00,$3C,$07,$FF,$00,$07,$FF,$FF,$FF,$FC,$1E,$00
 ),($00,$1E,$01,$FE,$00,$0F,$FF,$FF,$FF,$F8,$3C,$00),($00,$0F,$00,$FC
 ,$00,$0F,$FF,$FF,$FF,$F0,$3C,$00),($00,$07,$80,$38,$00,$1F,$FF,$FF
 ,$FF,$F0,$3C,$00),($00,$03,$C0,$00,$00,$3F,$FF,$FF,$FF,$E0,$78,$00
 ),($00,$01,$F0,$00,$00,$7F,$FF,$FF,$FF,$C0,$78,$00),($00,$00,$FC,$00
 ,$C0,$FF,$FF,$FF,$FF,$80,$F0,$00),($00,$00,$7E,$01,$C1,$FF,$FF,$FF
 ,$FF,$00,$E0,$00),($00,$00,$1F,$83,$81,$FF,$FF,$FF,$FE,$01,$C0,$00
 ),($00,$00,$07,$C7,$03,$FF,$FF,$FF,$FC,$03,$C0,$00),($00,$00,$03,$FF
 ,$07,$FF,$FF,$FF,$F0,$07,$80,$00),($00,$00,$00,$7E,$0F,$FF,$FF,$FF
 ,$E0,$1F,$00,$00),($00,$00,$00,$1E,$1F,$FD,$FF,$FF,$00,$3E,$00,$00
 ),($00,$00,$00,$3C,$3F,$F8,$3F,$F8,$00,$78,$00,$00),($00,$00,$00,$38
 ,$7F,$F0,$00,$00,$03,$F0,$00,$00),($00,$00,$00,$70,$7F,$E0,$00,$00
 ,$0F,$E0,$00,$00),($00,$00,$00,$60,$FF,$C0,$00,$00,$FF,$80,$00,$00
 ),($00,$00,$00,$E1,$FF,$83,$C0,$07,$FC,$00,$00,$00),($00,$00,$01,$C3
 ,$FF,$07,$FF,$FF,$F0,$00,$00,$00),($00,$00,$03,$87,$FE,$0F,$FF,$FF
 ,$00,$00,$00,$00),($00,$00,$07,$0F,$FE,$1E,$7F,$F8,$00,$00,$00,$00
 ),($00,$00,$0E,$0F,$FC,$3C,$00,$00,$00,$00,$00,$00),($00,$00,$1C,$1F
 ,$F8,$7F,$F8,$00,$00,$00,$00,$00),($00,$00,$1C,$3F,$F0,$7F,$FF,$00
 ,$00,$00,$00,$00),($00,$00,$38,$3F,$E0,$F8,$07,$C0,$00,$00,$00,$00
 ),($00,$00,$70,$7F,$C0,$E0,$00,$E0,$00,$00,$00,$00),($00,$00,$F0,$FF
 ,$C0,$01,$E0,$38,$00,$00,$00,$00),($00,$01,$E1,$FF,$80,$07,$F8,$1C
 ,$00,$00,$00,$00),($00,$03,$C3,$FF,$00,$1F,$FF,$0E,$00,$00,$00,$00
 ),($00,$03,$87,$FE,$00,$7F,$FF,$86,$00,$00,$00,$00),($00,$07,$07,$FC
 ,$18,$FF,$FF,$C3,$00,$00,$00,$00),($00,$0E,$0F,$F8,$38,$FF,$FF,$C3
 ,$00,$00,$00,$00),($00,$1E,$1F,$F8,$31,$FF,$FF,$E1,$80,$00,$00,$00
 ),($00,$3C,$3F,$F0,$71,$FF,$FF,$E1,$80,$00,$00,$00),($00,$38,$7F,$E0
 ,$63,$FF,$FF,$F1,$80,$00,$00,$00),($00,$78,$FF,$C0,$E3,$FF,$FF,$F1
 ,$80,$00,$00,$00),($00,$F0,$FF,$C1,$E3,$FF,$FF,$F1,$80,$00,$00,$00
 ),($00,$E1,$FF,$83,$E1,$FF,$FF,$E1,$80,$00,$00,$00),($00,$E3,$FF,$07
 ,$71,$FF,$FF,$E1,$80,$00,$00,$00),($00,$E3,$FE,$0F,$30,$FF,$FF,$C3
 ,$00,$00,$00,$00),($00,$E3,$FC,$1E,$38,$FF,$FF,$C3,$00,$00,$00,$00
 ),($00,$E1,$F8,$1C,$1C,$7F,$FF,$86,$00,$00,$00,$00),($00,$E0,$70,$38
 ,$0C,$1F,$FF,$0E,$00,$00,$00,$00),($00,$70,$00,$70,$06,$07,$F8,$1C
 ,$00,$00,$00,$00),($00,$78,$00,$E0,$03,$81,$E0,$38,$00,$00,$00,$00
 ),($00,$3E,$01,$E0,$01,$E0,$00,$E0,$00,$00,$00,$00),($00,$1F,$FF,$C0
 ,$00,$F8,$07,$C0,$00,$00,$00,$00),($00,$07,$FF,$80,$00,$1F,$FF,$00
 ,$00,$00,$00,$00),($00,$01,$FE,$00,$00,$07,$F8,$00,$00,$00,$00,$00));

      dhc:array[0..98,0..19]of byte={dhc}
(($00,$00,$00,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$DE,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$FE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,
 $00,$04,$00,$00,$00,$FE,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),(
 $00,$80,$00,$00,$00,$07,$58,$00,$03,$FE,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00),($01,$90,$00,$00,$00,$07,$F8,$00,$07,$FC,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($03,$D0,$00,$00,$00,$03,$F8,$00,
 $07,$FC,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),($03,$F0,$00,$00,
 $00,$01,$F8,$00,$03,$F8,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),(
 $03,$F0,$00,$00,$00,$01,$F8,$00,$03,$F8,$00,$00,$00,$00,$01,$30,
 $00,$00,$00,$00),($03,$F0,$00,$00,$00,$01,$FC,$00,$07,$F8,$00,$00,
 $00,$00,$1F,$C0,$00,$00,$00,$00),($03,$F0,$00,$00,$00,$01,$FC,$00,
 $07,$F8,$00,$00,$00,$01,$FF,$A0,$00,$00,$00,$00),($01,$F8,$00,$00,
 $00,$00,$F8,$00,$07,$F8,$00,$00,$00,$03,$FF,$E0,$00,$00,$00,$00),(
 $F9,$FC,$00,$00,$00,$00,$F8,$00,$07,$F8,$00,$00,$00,$0F,$FF,$C0,
 $00,$00,$00,$00),($FF,$FC,$00,$00,$00,$00,$F8,$00,$07,$F8,$00,$00,
 $00,$3F,$FF,$E0,$00,$00,$00,$00),($FF,$FC,$00,$00,$00,$00,$F8,$00,
 $07,$F8,$00,$00,$01,$FF,$FF,$C0,$00,$00,$00,$00),($FF,$FF,$00,$00,
 $00,$00,$FC,$00,$07,$F8,$00,$00,$0F,$FF,$FF,$80,$00,$00,$00,$00),(
 $07,$FF,$F0,$00,$00,$00,$78,$00,$07,$F8,$00,$00,$3F,$FF,$F0,$00,
 $00,$00,$00,$00),($00,$FF,$FF,$00,$00,$00,$7C,$00,$07,$F8,$00,$00,
 $FF,$FF,$00,$00,$00,$00,$00,$00),($00,$3F,$FF,$E0,$00,$00,$7C,$00,
 $03,$F8,$00,$07,$FF,$E0,$00,$00,$00,$00,$00,$00),($00,$3F,$FF,$F8,
 $00,$00,$7C,$00,$03,$F8,$00,$1F,$FF,$00,$00,$00,$00,$00,$00,$00),(
 $00,$3F,$07,$FF,$00,$00,$7C,$00,$03,$F8,$00,$7F,$F0,$00,$00,$00,
 $00,$00,$00,$00),($00,$3F,$00,$FF,$C0,$00,$7C,$00,$03,$F0,$01,$FF,
 $C0,$00,$00,$00,$00,$00,$00,$00),($00,$3F,$00,$3F,$F0,$00,$3C,$00,
 $03,$F0,$07,$FF,$80,$00,$00,$00,$00,$00,$00,$00),($00,$1F,$00,$0F,
 $FC,$00,$3C,$00,$03,$F0,$1F,$FE,$00,$00,$00,$00,$00,$00,$00,$00),(
 $00,$1F,$00,$03,$FF,$00,$3C,$00,$03,$F0,$3F,$FC,$00,$00,$00,$00,
 $00,$00,$00,$00),($00,$1F,$00,$00,$FF,$C0,$3C,$00,$03,$F0,$7F,$F0,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$1F,$00,$00,$3F,$F0,$3C,$00,
 $03,$F0,$FF,$E0,$00,$00,$00,$00,$00,$00,$00,$00),($00,$1F,$00,$00,
 $0F,$F8,$3C,$00,$03,$F0,$FF,$80,$00,$00,$00,$00,$00,$00,$00,$00),(
 $00,$1F,$00,$00,$07,$FC,$3C,$00,$03,$F1,$FF,$80,$00,$00,$00,$00,
 $00,$00,$00,$00),($00,$1F,$00,$00,$01,$FE,$3C,$00,$03,$F1,$FF,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$0F,$00,$00,$00,$FF,$1C,$00,
 $03,$F3,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00),($00,$0F,$00,$00,
 $00,$7F,$1C,$00,$03,$E3,$FF,$00,$00,$00,$00,$00,$00,$00,$00,$00),(
 $00,$0F,$00,$00,$00,$7F,$9C,$00,$03,$E7,$FE,$00,$00,$00,$00,$00,
 $00,$00,$00,$00),($00,$0F,$00,$00,$00,$3F,$9C,$00,$03,$C7,$FE,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$1F,$00,$00,$00,$3F,$9C,$00,
 $03,$C7,$FF,$00,$00,$00,$00,$00,$F8,$00,$00,$00),($00,$0F,$00,$00,
 $00,$7F,$1C,$00,$03,$C7,$FF,$80,$00,$00,$00,$3F,$F0,$00,$00,$00),(
 $00,$1F,$00,$00,$01,$FF,$1C,$00,$03,$C3,$FF,$FE,$00,$00,$FF,$FF,
 $FF,$00,$00,$00),($00,$1F,$00,$00,$03,$FE,$1C,$00,$03,$C3,$FF,$FF,
 $FF,$FF,$FF,$FF,$FC,$00,$00,$00),($00,$1F,$00,$00,$1F,$F8,$1C,$00,
 $03,$C0,$3F,$FF,$FF,$FF,$FF,$FF,$FF,$FC,$00,$00),($00,$1F,$00,$00,
 $FF,$E0,$1C,$00,$03,$C0,$0F,$FF,$FF,$FF,$FF,$FF,$FF,$F8,$00,$00),(
 $00,$0F,$80,$7F,$FE,$00,$1C,$00,$07,$C0,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00),($0E,$1F,$3F,$FF,$FC,$00,$1C,$00,$07,$C0,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($1F,$FF,$FF,$FF,$F0,$00,$0C,$00,
 $7F,$FF,$FF,$C0,$00,$00,$00,$00,$00,$00,$00,$00),($1F,$FF,$FF,$FE,
 $00,$00,$0C,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00,$00),(
 $3F,$FF,$FF,$F0,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,
 $FF,$FF,$F0,$00),($7F,$FF,$FC,$00,$0F,$FF,$FF,$F0,$03,$C0,$00,$0F,
 $FF,$FF,$FF,$FF,$FF,$FF,$FF,$80),($3F,$FF,$80,$00,$3F,$FF,$FE,$00,
 $07,$C0,$00,$00,$01,$FF,$FF,$FF,$FF,$FF,$FF,$80),($00,$0E,$00,$07,
 $E0,$00,$0C,$00,$07,$C0,$00,$00,$00,$00,$01,$FF,$FF,$FF,$FF,$C0),(
 $00,$0E,$00,$00,$00,$00,$0C,$00,$07,$C0,$00,$00,$00,$00,$00,$00,
 $1F,$FF,$FF,$FC),($00,$04,$00,$00,$00,$00,$0C,$00,$03,$C0,$00,$00,
 $00,$60,$00,$00,$07,$87,$FF,$F8),($00,$0E,$00,$00,$00,$00,$0C,$00,
 $07,$C0,$00,$04,$00,$A0,$00,$C0,$18,$00,$07,$FC),($00,$04,$00,$00,
 $00,$00,$0C,$00,$07,$C0,$00,$0A,$01,$B2,$00,$E0,$20,$00,$00,$7C),(
 $00,$04,$00,$00,$00,$00,$0C,$00,$07,$C4,$00,$0A,$01,$15,$01,$A0,
 $40,$1F,$FE,$03),($00,$00,$00,$00,$00,$00,$0C,$00,$07,$BF,$F0,$11,
 $01,$15,$03,$20,$40,$06,$03,$00),($00,$00,$00,$00,$00,$00,$0C,$00,
 $0F,$02,$0C,$10,$82,$0C,$82,$10,$9F,$C2,$00,$00),($00,$00,$00,$00,
 $00,$00,$0C,$00,$0F,$02,$02,$10,$82,$08,$86,$10,$80,$62,$00,$00),(
 $00,$00,$00,$00,$00,$00,$0C,$00,$0F,$03,$01,$10,$C6,$08,$5F,$F0,
 $80,$22,$00,$00),($00,$00,$00,$00,$00,$00,$0C,$00,$0F,$01,$01,$10,
 $44,$00,$44,$1E,$80,$22,$00,$00),($00,$00,$00,$00,$00,$00,$04,$00,
 $0F,$01,$01,$20,$40,$00,$44,$08,$40,$EF,$F0,$00),($00,$00,$00,$00,
 $00,$00,$04,$00,$0E,$01,$06,$27,$FC,$00,$68,$08,$3F,$A2,$00,$00),(
 $00,$00,$00,$00,$00,$00,$04,$00,$0E,$01,$F8,$38,$20,$00,$28,$08,
 $00,$22,$00,$00),($00,$00,$00,$00,$00,$00,$04,$00,$0E,$0F,$01,$E0,
 $20,$00,$28,$00,$00,$22,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $0E,$01,$00,$20,$20,$00,$20,$00,$00,$0F,$FF,$C0),($00,$00,$00,$00,
 $00,$00,$00,$00,$0E,$01,$00,$20,$20,$00,$20,$00,$00,$02,$00,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$0E,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$0E,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $0E,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$0E,$00,$10,$00,$00,$00,$18,$01,$00,$00,$F8,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$0C,$10,$10,$02,$00,$0C,$08,$0D,
 $01,$C0,$07,$C0),($00,$00,$00,$00,$00,$00,$00,$00,$0C,$08,$08,$05,
 $00,$30,$08,$C3,$E0,$78,$00,$30),($00,$00,$00,$00,$00,$00,$00,$00,
 $08,$08,$08,$05,$00,$40,$0B,$01,$1E,$46,$00,$20),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$0C,$08,$09,$00,$80,$0E,$01,$00,$41,$00,$40),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$08,$09,$00,$80,$18,$01,
 $00,$21,$01,$80),($00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$3F,$11,
 $01,$00,$28,$07,$E0,$22,$02,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$07,$C8,$10,$81,$00,$28,$01,$10,$FC,$0C,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$1C,$08,$23,$F9,$00,$18,$01,$00,$70,$10,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$66,$08,$FC,$81,$00,$0C,$01,
 $00,$3C,$20,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$09,$20,
 $41,$00,$0A,$01,$07,$27,$3F,$E0),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$02,$08,$20,$40,$F0,$11,$87,$F8,$21,$80,$1C),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$02,$08,$40,$40,$0F,$90,$61,$00,$20,$60,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$08,$40,$40,$00,$10,$18,
 $00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,$01,$90,$00,
 $00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $3E,$00,$7F,$84,$00,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$1E,$03,$E0,$10,$74,$00,$20,$00,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$60,$02,$18,$10,$02,$00,$60,$00,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$80,$02,$04,$10,$02,
 $00,$C0,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$00,
 $01,$04,$13,$C2,$00,$80,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$04,$00,$01,$08,$7C,$02,$01,$80,$00,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$08,$00,$01,$30,$10,$01,$11,$00,$00,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,$00,$01,$C0,$10,$01,
 $13,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,$00,
 $07,$80,$7E,$01,$2A,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$01,$C0,$01,$F0,$11,$E1,$2A,$00,$00,$00),($00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$3F,$F0,$8F,$00,$19,$4A,$00,$00,$00),(
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$81,$E0,$01,
 $4C,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$80,$30,$01,$84,$00,$00,$00),($00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$80,$00,$00,$00));

var sintab:array[0..255]of byte;
    screen:array[0..399,0..79] of byte absolute $a000:0;
    pd,pg,pb:ppicture;{picGreen picBlue picFilter}

{--------------------den_po bump mapping-------------------------}
procedure bump;
var
  a,w:word;
  timing,sss:longint;
  pp:ppicture;
  xxx,yyy,xx,yy,x,y,xcg,ycg,xcb,ycb:integer;
  fy,fx:byte;
  outproc:boolean;
begin
  new(pp);
  outproc:=false;
  for a:=0 to 63 do begin
    port[$3c8]:=a;   port[$3c9]:=0;  port[$3c9]:=a;  port[$3c9]:=0;
    port[$3c8]:=a+64;port[$3c9]:=a;  port[$3c9]:=0;  port[$3c9]:=0;
  end;
  for x:=0 to 159 do begin
    for y:=0 to 199 do begin
      xx:=63-(sqr(x-79)+sqr(y-99))shr 6;
      if xx<0 then xx:=0;
      pp^[y,x]:=xx;
    end;
  end;
  timing:=meml[0:$46c];
  repeat
    sss:=meml[0:$46c]-timing;
    while ( port[$3da] and 8<>0 )do;
    while ( port[$3da] and 8= 0 )do;
    if sss>800 then begin
      outproc:=true;
    end;
    if sss<63*4 then begin
      for y:=0 to 63 do begin
        a:=(sss)*y shr 8;
        port[$3c8]:=y;
        port[$3c9]:=a; port[$3c9]:=0; port[$3c9]:=0;
        port[$3c8]:=y+64;
        port[$3c9]:=0; port[$3c9]:=a; port[$3c9]:=0;
        port[$3c8]:=y+128;
        a:=(63*4-sss)*y shr 8;{clearing DHC string}
        port[$3c9]:=a shr 1;port[$3c9]:=a shr 1;port[$3c9]:=a;
      end;
    end;
    if sss>63*4+300 then begin
      for y:=0 to 63 do begin
        a:=(63*8+300-sss)*y shr 8;
        port[$3c8]:=y;
        port[$3c9]:=a; port[$3c9]:=0; port[$3c9]:=0;
        port[$3c8]:=y+64;
        port[$3c9]:=0; port[$3c9]:=a; port[$3c9]:=0;
        port[$3c8]:=y+128;
      end;
    end;
    xcg:=(sintab[byte(sss*3)]shr 1-64);
    ycg:=(sintab[byte(sss*2)]shr 1-64);
    xcb:=(sintab[byte(sss*2+1414)]shr 1-64);
    ycb:=(sintab[byte(sss*3)]shr 1-64);
    for y:=0 to 198 do begin
      for x:=0 to 158 do begin
        fy:=pg^[y,x+x]shl 1;
        xxx:=x+(fy-pg^[y,x+x+1]shl 1);
        yyy:=y+(fy-pg^[y+1,x+x]shl 1);
          {можно вынуть из комментария shl - получится по другому}
        portw[$3c4]:=$502;
        xx:=xxx+xcg;
        yy:=yyy+ycg;
        if(xx>=0)and(xx<159)and(yy>=0)and(yy<199)then
            screen[y+y,x shr 1]:=pp^[yy,xx];
        xx:=xxx+xcb;
        yy:=yyy+ycb;
        if(xx>=0)and(xx<159)and(yy>=0)and(yy<199)then
            screen[y+y+1,x shr 1]:=pp^[yy,xx]+64;
      end;
    end;
  until keypressed or outproc;
  dispose(pp);
end;
{--------------------den_po bump mapping-------------------------}

{-----------------------den_po rotate----------------------------}
procedure rott;
type ppm=^tpm;
     tpm=array[0..199,0..159]of byte;
var xc,yc,sqry,a,b:integer;
    pm:ppm;
    hh,ss:word;
    timing,sss:longint;
    outproc:boolean;
    offs:byte;
const ttim=0;
      ttim1=ttim+300;
      ttim2=ttim1+63*4;
      ttim3=ttim2+63*4;
      ttim4=ttim3+63*4;
      ttimmov=200;
begin
  new(pm);
  outproc:=false;
  offs:=90;
  for a:=0 to 199 do begin{write DHC sign}
    for b:=0 to 159 do begin
      portw[$3c4]:=$202;
      screen[a+a,b shr 1]:=pd^[a,b]+128;
      portw[$3c4]:=$802;
      screen[a+a{+1},b shr 1]:=pd^[a,b+1]+128;
    end;
  end;
  timing:=meml[0:$46c];
  repeat
      while ( port[$3da] and 8<>0 )do;
      while ( port[$3da] and 8= 0 )do;
      sss:=meml[0:$46c]-timing;
      if sss<63*4 then begin
          for hh:=0 to 63 do begin
              a:=(sss)*hh shr 8;
              port[$3c8]:=hh;
              port[$3c9]:=0;port[$3c9]:=a;port[$3c9]:=0;
              port[$3c8]:=hh+64;
              port[$3c9]:=a;port[$3c9]:=0;port[$3c9]:=0;
              port[$3c8]:=255;
              port[$3c9]:=a shr 1;port[$3c9]:=a shr 1;port[$3c9]:=0;
          end;
      end;
      if sss>ttimmov then begin
         sss:=sss-ttimmov;
         xc:=sintab[byte(sss*3)]-128;
         yc:=sintab[byte(sss*2)]-128;
      end
      else begin
      xc:=0; yc:=0;
      end;
           { taki 183 manhattan - first graffer, usa, 19?? year }
           { stay hi                                            }
           {                                                    }
           {    (этот комментарий к программе не относится)     }
      if(sss>=ttim1)and(sss<ttim2)then begin
          for hh:=0 to 63 do begin
              port[$3c8]:=128+hh;
              a:=(sss-ttim1)*hh shr 8;
              port[$3c9]:=a shr 1;port[$3c9]:=a shr 1;port[$3c9]:=a;
              port[$3c8]:=hh;
              a:=((ttim2-sss)*hh shr 8);
              port[$3c9]:=0;port[$3c9]:=a;port[$3c9]:=0;
              port[$3c8]:=hh+64;
              port[$3c9]:=a;port[$3c9]:=0;port[$3c9]:=0;
          end;
      end;
      offs:=byte( (sss-ttim1)*15 );
      if (sss>=ttim2-5) then begin {ttim4}
         outproc:=true;
      end else begin
          for a:=0 to 199 do begin
              sqry:=(sqr(a+yc-99));
              for b:=0 to 159 do begin
                  pm^[a,b]:=sintab[byte((sqry+sqr(b+xc-79))shr 6+offs)];
              end;
          end;
          hh:=1;
          for a:=1 to 198 do begin
              for b:=1 to 158 do begin
                  portw[$3c4]:=$102;
                  yc:=a + pm^[a,b] - pm^[a+1,b];
                  xc:=b + 80 + pm^[a,b] - pm^[a,b+1];
                  if yc<0 then yc:=0;
                  if yc>199 then yc:=199;
                  mem[$a000:hh]:=pg^[ yc ][ xc ];
                  mem[$a000:hh+80]:=pb^[ yc ][ xc ]+64;
                  inc(b);
                  portw[$3c4]:=$402;
                  yc:=a + pm^[a,b] - pm^[a+1,b];
                  xc:=b + 80 + pm^[a,b] - pm^[a,b+1];
                  if yc<0 then yc:=0;
                  if yc>199 then yc:=199;
                  mem[$a000:hh]:=pg^[ yc ][ xc ];
                  mem[$a000:hh+80]:=pb^[ yc ][ xc ]+64;
                  inc(hh);
              end;
              inc(hh,81);
          end;
      end;
  until (keypressed)or(outproc);
  portw[$3c4]:=$502;for hh:=0 to 63999 do mem[sega000:hh]:=0;
  dispose(pm);
end;
{-----------------------den_po rotate----------------------------}

procedure drawdps;
var x,y,w,i:integer;
begin
  for y:=0 to 32 do begin
      for x:=0 to 7 do begin
          w:=dps[y,x];
          for i:=0to 3 do begin
              portw[$3c4]:=$202;
              if (w and 128)>0 then screen[y+y+333,x*4+i]:=255;
              w:=w+w;
              portw[$3c4]:=$802;
              if (w and 128)>0 then screen[y+y+333,x*4+i]:=255;
              w:=w+w;
          end;
      end;
  end;
end;

{-------------------------init video-----------------------------}
procedure initvideo;
var i:byte;
    regs: Registers;
    w:word;
    x,y:integer;
begin
  regs.ax := $13; intr($10,regs);
  portw[$3d4]:=9;
  portw[$3c4]:=$604;
  portw[$3d4]:=$e317;
  portw[$3d4]:=$14;
  port[$3c8]:=0;
  for i:=0 to 255 do begin
      port[$3c9]:=0;
      port[$3c9]:=0;
      port[$3c9]:=0;
  end;
  portw[$3c4]:=$f02;
  for w:=0 to 63999 do mem[segA000:w]:=0;
  drawdps;
end;
{-------------------------init video-----------------------------}

{-----------------------------main-------------------------------}
var maxav:longint;
    a,b,c,d,e:integer;
    pf:ppicture; {picGreen picBlue picFilter}
    xc,yc,bb:byte;
    regs: Registers;
    w:word;
begin
  new(pg);
  new(pb);
  new(pd);
  new(pf);
  write('■ Sinus table calculation   ');
  for a:=0 to 255 do sintab[a]:=trunc(127.5+127.5*sin(a*2*pi/256));
  write('Ok!'^M^J'■ Cleaning bufferz          ');
  for a:=0 to 199 do begin
      for b:=0 to 319 do begin
          pg^[a,b]:=0; pb^[a,b]:=0; pd^[a,b]:=0;
          pf^[a,b]:=0;
      end;
  end;
  {------------------drawing d_po------------------}
  write('Ok!'^M^J'■ Images calculation        ');
  for a:=0 to 116-1 do begin
      for b:=0 to 96 div 8-1 do begin
          bb:=dpo[a,b];
          yc:=112+b*8+8;
          for c:=0 to 7 do begin
              pg^[a+42][yc-c]:=63*ord(bb and 1);
              pb^[a+42][yc-c]:=63*ord(bb and 1);
              bb:=bb div 2;
          end;
          inc(e);
      end;
  end;
  {------------------drawing d_po------------------}
  {------------------drawing dhc-------------------}
  for a:=0 to 98 do begin
      for b:=0 to 19 do begin
          c:=dhc[a,b];
          for d:=0 to 7 do begin
              if(c and 128>0)then begin
                   pf^[a*2][b*8+d]:=63;
                   pf^[a*2+1][b*8+d]:=63;
                   pf^[a*2][b*8+d+1]:=63;
                   pf^[a*2+1][b*8+d+1]:=63;
              end;
              c:=c shl 1;
          end;
      end;
  end;
      {--------------}
      for a:=0 to 159 do begin
          pf^[0,a]:=0;
          pf^[199,a]:=0;
      end;
      for a:=0 to 199 do begin
          pf^[a,0]:=0;
          pf^[a,159]:=0;
      end;
      for a:=1 to 198 do begin
          for b:=1 to 157 do begin
              pd^[a,b]:=(pf^[a-1,b]+pf^[a+1,b]+pf^[a,b-1]+pf^[a,b+2]+
                      pf^[a-1,b-1]+pf^[a-1,b+1]+pf^[a+1,b-1]+pf^[a+1,b+1])shr 3;
          end;
      end;
  {------------------drawing dhc-------------------}
  write('Ok!'^M^J'■ Filling background        ');
  for c:=0 to 2500 do begin
      a:=random(180)+10;
      b:=random(300)+10;
      if pg^[a][b]=0 then pg^[a][b]:=255;
      a:=random(180)+10;
      b:=random(300)+10;
      if pb^[a][b]=0 then pb^[a][b]:=255;
  end;
  {------------------filter------------------}
  write('Ok!'^M^J'■ Filtering [▒▒▒▒▒▒]'^H^H^H^H^H^H^H);
  for c:=0 to 2 do begin
      for a:=1 to 198 do begin
          for b:=1 to 319 do begin
              pf^[a,b]:=(
                         pg^[a-1,b]+pg^[a+1,b]+pg^[a,b-1]+pg^[a,b+2]+
                         pg^[a-1,b-1]+pg^[a-1,b+1]+pg^[a+1,b-1]+pg^[a+1,b+1])
                         shr 3;
          end;
      end;
      for a:=1 to 198 do begin
          for b:=1 to 319 do begin
              pg^[a,b]:=(
                         pf^[a-1,b]+pf^[a+1,b]+pf^[a,b-1]+pf^[a,b+2]+
                         pf^[a-1,b-1]+pf^[a-1,b+1]+pf^[a+1,b-1]+pf^[a+1,b+1])
                         shr 3;
          end;
      end;
      write('▓');
      {--------------}
      for a:=1 to 198 do begin
          for b:=1 to 319 do begin
              pf^[a,b]:=(
                         pb^[a-1,b]+pb^[a+1,b]+pb^[a,b-1]+pb^[a,b+2]+
                         pb^[a-1,b-1]+pb^[a-1,b+1]+pb^[a+1,b-1]+pb^[a+1,b+1])
                         shr 3;
          end;
      end;
      for a:=1 to 198 do begin
          for b:=1 to 319 do begin
              pb^[a,b]:=(
                         pf^[a-1,b]+pf^[a+1,b]+pf^[a,b-1]+pf^[a,b+2]+
                         pf^[a-1,b-1]+pf^[a-1,b+1]+pf^[a+1,b-1]+pf^[a+1,b+1])
                         shr 3;
          end;
      end;
      write('▓');
  end;
  Dispose(Pf);
  {------------------filter------------------}
  initvideo;
  rott;  {первая часть интрушки}
  if not(keypressed)then begin
    bump; {вторая часть}
  end;
  while keypressed do readkey;
  TextMode(3);
  Dispose(Pg);
  Dispose(Pb);
  Dispose(Pd);
  textcolor(13);
    writeln('Чистый паскаль! Без ASM-вставок, без BGI, без внешних процедур.');
  textcolor(12);
    write('Дема by Ден По.  ');
  textcolor (9);
    writeln('Fido: 2:5066/68.19 aka 2:5066/66.19'^M^J);
  textcolor(11);
    writeln('Пользуясь случаем, передаю приветы следующим лицам '+
            '(телам, конечностям ;):');
  textcolor(10);
    writeln('- borland''у за tp7');
    writeln('- Антону Зыкову         (написал что нового?)');
    writeln('- L-Man''у (''ю?)         (просто привет)');
    writeln('- Леше Лохину           (как там линух поживает?)');
    writeln('- GRIGR''у               (что нового?)');
    writeln('- DPh''у                 (где HTM-ки?)');
    writeln('- Salamon''у             (когда пиво пить будем?)');
    writeln('- Tailhead''у и Дамону   (как там BBS? ;)');
    writeln('- KID''у ;)');
    writeln('- 2 All rappaz');
end.
